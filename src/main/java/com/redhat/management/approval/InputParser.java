package com.redhat.management.approval;

import java.io.IOException;
import java.io.Serializable;

import java.util.TimeZone;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Base64;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.List;
import java.util.ArrayList;

import com.fasterxml.jackson.databind.ObjectMapper;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class InputParser implements Serializable {

    static final long serialVersionUID = 1L;

    public static RequestPacket parseRequestPacket(Map<String, Object> requestPacket) {
        return new RequestPacket(requestPacket);
    }

    /*
     group 1: {name=g_abc, uuid=1234, users=[{username=abc, email=abc@123.com, first_name=abc, last_name=def}, {username=bcd,
    email=bcd@123.com, first_name=bcd, last_name=efg}]}
    */

    public static List<Group> parseGroups(List<LinkedHashMap<String, Object>> rawGroups) {
        List<Group> groups = new ArrayList<Group>();
        for (LinkedHashMap<String, Object> rawGroup : rawGroups) {
            ArrayList<LinkedHashMap<String, String>> rawApprovers = (ArrayList<LinkedHashMap<String, String>>) rawGroup.get("users");
            ArrayList<Approver> approvers = new ArrayList<Approver>();

            for (LinkedHashMap<String, String> rawApprover : rawApprovers) {
                Approver approver = new Approver(rawApprover.get("username"), rawApprover.get("email"), rawApprover.get("first_name"), rawApprover.get("last_name"));
                approvers.add(approver);
            }

            Group group = new Group((String)rawGroup.get("name"), approvers, (String)rawGroup.get("uuid"));
            groups.add(group);
        }

        return groups;
    }

    public static Request parseRequest(Map<String, Object> rawRequest, RequestPacket packet) {
        return new Request(rawRequest, packet);
    }
}
